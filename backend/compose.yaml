networks:
  dietideals24-network: # Define a custom network
    driver: bridge
     
services:
  
  db:
    image: postgres:latest
    container_name: dietideals24-postgres
    ports:
      - "5432:5432" # Expose PostgreSQL on localhost:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data # Persistent volume for data
      - ./sql-scripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - dietideals24-network
  
  dietideals24restapi:
    image: dietideals24restapi
    build:
      context: ./DietiDeals24RestApi
      dockerfile: Dockerfile
    ports:
      - "5029:5029"
      #- "5030:5030"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 5029
      #ASPNETCORE_HTTPS_PORTS: 5030
      DB_CONNECTION_STRING: "Host=${DB_HOST};Port=5432;Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      AWS_REGION: ${AWS_DEFAULT_REGION}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      USER_POOL_ID: ${USER_POOL_ID}
      COGNITO_CLIENT_ID: ${COGNITO_CLIENT_ID}
      ARN_LAMBDA_AUCTION_END_TIME: ${ARN_LAMBDA_AUCTION_END_TIME}
      ARN_AUCTION_END_TIME_ROLE: ${ARN_AUCTION_END_TIME_ROLE}
    networks:
      - dietideals24-network
    depends_on:
      - db

#  migrations:
#    build:
#      context: ./DietiDeals24RestApi
#      dockerfile: Dockerfile
#      target: migration
#      args:
#        DB_CONNECTION_STRING: "Host=${DB_HOST};Port=5432;Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
#    networks:
#      - dietideals24-network
#    depends_on:
#      - db

        
  
        
  

volumes:
  pgdata: # Define a persistent volume for PostgreSQL data
